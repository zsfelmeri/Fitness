@page "/clienttickets"
@inject Blazored.LocalStorage.ILocalStorageService LocalStore

<h3>ClientTickets</h3>

@if(isAdmin || isUser)
{
    <div>
        <label>Name or Barcode: </label>
        <input type="text" @bind="inputString" /><br />

        @foreach (var item in new string[] { "All", "Valid", "Invalid" })
        {
            <label>@item</label>
            <input type="radio" value="@item" @onchange="RadioSelection" checked=@(radioValue.Equals(item, StringComparison.OrdinalIgnoreCase)) /> <br />
        }

        @*<label>Ticket types: </label>
        @if (tickets.Count() == 0)
        {
            <h3>There is no ticket yet.</h3> <br />
        }
        else
        {
            <select @onchange="OnChangeEvent">
                <option value="All">All</option>
                @foreach (var t in tickets)
                {
                    @if (t.isDeleted != 1)
                    {
                        <option value="@t.id">@t.denomination</option>
                    }
                }
            </select><br />
        }*@

        @*<label>Remaining time: </label>
        <input type="text" @bind="remainingTime" placeholder="Day" /><br />*@

        <button class="btn btn-primary" @onclick="SearchClientTicket">Search</button>
    </div>

    <div>
        @if(validClientTickets != null)
        {
                if (validClientTickets.Count() > 0)
                {
                    <table class="table-bordered">
                        <tr>
                            <th>First Usage</th>
                            <th>Number of Previous entries</th>
                            <th>Purchase Date</th>
                            <th>Selling Pirce</th>
                            <th>Valid </th>
                        </tr>

                        @foreach (var ct in validClientTickets)
                        {
                            <tr>
                                <td>@ct.firstUsageDate</td>
                                <td>@ct.numberOfPreviouslyAccess</td>
                                <td>@ct.purchaseDate</td>
                                <td>@ct.sellingPrice</td>
                                @if (ct.valid == 1)
                                {
                                    <td>Yes</td>
                                }
                                else
                                {
                                    <td>No</td>
                                }
                            </tr>
                        }
                    </table>
                }
                else
                {
                    <h3>There is no ticket yet.</h3>
                }
        }
    </div>
}

@code {
    public bool isAdmin { set; get; }
    public bool isUser { set; get; }
    public string inputString { set; get; } = string.Empty;
    public string radioValue { get; set; } = string.Empty;
    public string selectedValue { get; set; } = string.Empty;
    public string remainingTime { get; set; } = string.Empty;

    public List<Ticket> tickets { get; set; } = new List<Ticket>();
    public List<ClientTicket> validClientTickets { get; set; } = new List<ClientTicket>();

    private void OnChangeEvent(ChangeEventArgs e)
    {
        selectedValue = e.Value.ToString();
    }

    private async void SearchClientTicket()
    {
        FireBase firebase = new FireBase();
        List<ClientTicket> clientTickets = new List<ClientTicket>();
        clientTickets = await firebase.GetClientTickets();

        List<Client> clients = new List<Client>();
        clients = await firebase.GetClients();

        string[] ids = new string[clients.Count()];

        foreach(var c in clients)
        {
            if(inputString.ToLower() == c.barCode.ToLower() || inputString.ToLower() == c.name.ToLower())
            {
                ids.Append(c.id);
            }
        }

        if (radioValue == "All")
        {
            if (selectedValue == "All")
            {
                foreach (var ct in clientTickets)
                {
                    if (ids.Contains(ct.clientId))
                    {
                        validClientTickets.Add(ct);
                    }
                }
            }
        }
        else if(radioValue == "Valid")
        {
            foreach (var ct in clientTickets)
            {
                if (ids.Contains(ct.clientId) && ct.valid == 1)
                {
                    validClientTickets.Add(ct);
                }
            }
        }
        else if(radioValue == "Invalid")
        {
            foreach (var ct in clientTickets)
            {
                if (ids.Contains(ct.clientId) && ct.valid == 0)
                {
                    validClientTickets.Add(ct);
                }
            }
        }
    }

    private void RadioSelection(ChangeEventArgs e)
    {
        radioValue = e.Value.ToString();
    }

    protected override async Task OnInitializedAsync()
    {
        FireBase firebase = new FireBase();
        isAdmin = await LocalStore.GetItemAsync<bool>("SessionAdmin");
        isUser = await LocalStore.GetItemAsync<bool>("SessionUser");
        tickets = await firebase.GetAllTicket();
        radioValue = "All";
        selectedValue = "All";
    }
}
