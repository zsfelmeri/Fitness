@page "/clients"
@inject Blazored.LocalStorage.ILocalStorageService LocalStore

<h3>Clients</h3>


@if (isAdmin)
{
    <div>
        <button @onclick="@GetAllClients" class="btn btn-primary">Get all clients</button>
    </div>

    <div>
        <input type="text" @bind="SearchCriteria" placeholder="Name: ex. Tom" />
        <button class="btn btn-primary" @onclick="SearchClient">Search</button>
    </div>

    <div>
        <input type="text" @bind="SearchCriteria" placeholder="Name: ex. Tom" />
        <button class="btn btn-primary" @onclick="SearchEmployee">Search</button>
    </div>

    if (clients?.Count() != 0)
    {
        <div class="table-bordered">
            <table>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Address</th>
                    <th>Personal Identity</th>
                    <th>Mobile</th>
                    <th>Barcode</th>
                </tr>

                @foreach (Client client in clients)
                {
                    <ClientsView client="@client" />
                }
            </table>
        </div>
    }

    <div>
        <a class="btn btn-primary" href="clients/add">Add Client</a>
    </div>
}
else if (isUser)
{
    <div>
        <button @onclick="@GetAllClients" class="btn btn-primary">Get all clients</button>
    </div>

    <div>
        <input type="text" @bind="SearchCriteria" placeholder="Name: ex. Tom" />
        <button class="btn btn-primary" @onclick="SearchClient">Search</button>
    </div>

    if (clients?.Count() != 0)
    {
        <div class="table-bordered">
            <table>
                <tr>
                    <th>Deleted</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Address</th>
                    <th>Personal Identity</th>
                    <th>Mobile</th>
                    <th>Barcode</th>
                </tr>

                @foreach (Client client in clients)
                {
                    <ClientsView client="@client" />
                }
            </table>
        </div>
    }

    <div>
        <a class="btn btn-primary" href="clients/add">Add Client</a>
    </div>
}

@code {
    public bool isAdmin { set; get; }
    public bool isUser { set; get; }

    public FireBase firebase { get; set; }

    public List<Client> clients { get; set; } = new List<Client>();
    public List<Employee> employees { get; set; } = new List<Employee>();

    public string SearchCriteria { get; set; } = string.Empty;

    private async Task GetAllClients()
    {
        clients = await firebase.GetClients();
    }

    private async Task SearchClient()
    {
        clients = await firebase.SearchClient(SearchCriteria);
    }

    private async Task SearchEmployee()
    {
        employees = await firebase.SearchEmployee(SearchCriteria);
    }

    protected override async Task OnInitializedAsync()
    {
        firebase = new FireBase();
        isAdmin = await LocalStore.GetItemAsync<bool>("SessionAdmin");
        isUser = await LocalStore.GetItemAsync<bool>("SessionUser");
    }
}
