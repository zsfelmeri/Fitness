@page "/clients/add"

<div>
    <h3>Client info:</h3>
    <label>Name: </label>
    <input type="text" @bind="@client.name" />
    <br />

    <label>Address: </label>
    <input type="text" @bind="@client.address" />
    <br />

    <label>Email: </label>
    <input type="text" @bind="@client.email" />
    <br />

    <label>Mobile: </label>
    <input type="text" @bind="@client.telefon" />
    <br />

    <label>Barcode: </label>
    <input type="text" @bind="@client.barCode" />
    <br />

    <label>Personal Identity: </label>
    <input type="text" @bind="@client.personalIdentity" />
    <br />

    <label>Photo: </label>
    <input type="text" @bind="@client.photo" />
    <br />

    <label>Comments: </label>
    <textarea @bind="comment"></textarea><br />

    <label>Add ticket </label>
    <input type="checkbox" @bind="ticketCheck" /> <br />

    @if (ticketCheck)
    {
        <h3>Ticket info:</h3>
        <label>Ticket types: </label>
        @if (tickets.Count() == 0)
        {
            <h3>There is no ticket yet.</h3> <br/>
        }
        else
        {
            <select @onchange="OnChangeEvent">
                @foreach (var t in tickets)
                {
                    <option value="@t.id">@t.denomination</option>
                }
            </select><br />

            @for(int i = 0; i < tickets.Count(); ++i)
            {
                if(tickets[i].id == selectedValue)
                {
                    <label>From: @tickets[i].fromHour</label><br />
                    <label>To: @tickets[i].toHour</label><br />
                    <label>Valid Days: @tickets[i].numberOfValidDays</label><br />
                    <label>Valid Entries: @tickets[i].numberOfValidEntry</label><br />
                    <label>Usage / day: @tickets[i].usageForDay</label><br />
                    <label>Price: @tickets[i].price</label><br />
                }
            }
        }
    }

    <button class="btn btn-primary" @onclick="AddClient">Add</button>
    <br />

    @if (isAdded)
    {
        <h3>Client has been added.</h3>
        isAdded = false;
    }
</div>

    @code {
        public Client client { get; set; } = new Client();
        public ClientTicket ticket { get; set; } = new ClientTicket();
        bool isAdded = false;

        public string comment = string.Empty;
        public bool ticketCheck = false;
        public string selectedValue = string.Empty;

        public List<Ticket> tickets { get; set; } = new List<Ticket>();

        protected override async Task OnInitializedAsync()
        {
            FireBase firebase = new FireBase();
            tickets = await firebase.GetAllTicket();
        }

        private void OnChangeEvent(ChangeEventArgs e)
        {
            selectedValue = e.Value.ToString();
        }

        private void AddClient()
        {
            FireBase firebase = new FireBase();

            client.comments = comment.Split("\n");
            client.insertedDate = DateTime.Now.ToString("dd.MM.yyyy");

            if (ticketCheck)
            {
                Ticket t = new Ticket();
                for(int i = 0; i < tickets.Count(); ++i)
                {
                    if(tickets[i].id == selectedValue)
                    {
                        t = tickets[i];
                        break;
                    }
                }

                ticket.clientId = client.id;
                ticket.firstUsageDate = string.Empty;
                ticket.gymId = t.gymId;
                ticket.numberOfPreviouslyAccess = 0;
                ticket.purchaseDate = DateTime.Now.ToString("dd.MM.yyyy");
                ticket.sellingPrice = t.price;
                ticket.ticketId = selectedValue;
                ticket.valid = 1;
            }

            firebase.InsertClient(client, ticket, ticketCheck);

            isAdded = true;
        }
    }
